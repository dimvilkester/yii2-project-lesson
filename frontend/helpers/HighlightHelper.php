<?php

/**
 * 
 ** Перечисление **
 * ==============
 *  
 * Вертикальная черта разделяет допустимые варианты. Например, gray|grey соответствует gray или grey. 
 * Следует помнить, что перебор вариантов выполняется слева направо, как они указаны.
 * 
 * Если требуется указать перечень вариантов внутри более сложного регулярного выражения, то его нужно заключить в группу. 
 * Например, gray|grey или gr(a|e)y описывают строку gray или grey. В случае с односимвольными альтернативами предпочтителен вариант gr[ae]y, 
 * так как сравнение с символьным классом выполняется проще, чем обработка группы с проверкой на все её возможные модификаторы и генерацией обратной связи.
 * 
 */

namespace frontend\helpers;

/**
 * @author mr. Anderson
 */
class HighlightHelper {
    
    /**
     * @param string $keyword
     * @param string $content
     * @return string
     */
    public static function process($keyword, $content) {
        
        /**
         * Обрезаем пробелы у ключевого слова для поиска 
         * Разбивает строку с помощью разделителя (пробел). @return массив слов
         */
        $words = explode(' ', trim($keyword));
  
        /**
         * Описываем регулярное выражение для поиска
         * используем imploade для объединения элементов массива $words в строку 
         * через разделитель |. Для того чтобы в регулярном выражении разделить допустимые варианты
         * Например, gray|grey соответствует gray или grey (смотри вверху страницы)
         */
        $pattern = '/' . implode('|', $words) . '/i';
        
        /**
         * Подмаски нумеруются слева направо, начиная с единицы ($1, $2, ... $n).
         * Каждая такая ссылка будет заменена на подстроку, соответствующую n-ой подмаске. n может принимать значения от 0 до 99, 
         * причем ссылка $0 соответствует вхождению всего шаблона.
         */
        $replacement = '<b>$0</b>';
        
        /**
         * preg_replace - выполняет поиск совпадений в строке $content 
         * по регулярному выражению (шаблон) $pattern и заменяет их на $replacement.
         */
        return preg_replace($pattern, $replacement, $content);
    }
}
